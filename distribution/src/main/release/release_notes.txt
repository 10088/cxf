Apache CXF 3.3.8 Release Notes

1. Overview

The 3.3.x versions of Apache CXF is a significant new version of CXF
that provides several new features and enhancements.  

New features include: 
* Support for signing HTTP messages via the HTTP Signature draft spec
   (https://tools.ietf.org/html/draft-cavage-http-signatures)
   in the cxf-rt-rs-security-http-signature module.
* Initial support for Java 11 - CXF has been built and tested with
  Java 11.   It is not using the Java 11 modules, but it can be built
  and the tests pass with Java 11.
* MicroProfile Rest Client v1.2 implementation


Important notes:
CXF 3.3.x no longer supports Java 7.   You must upgrade to Java 8 or later.

Users are encouraged to review the migration guide at:
http://cxf.apache.org/docs/33-migration-guide.html
for further information and requirements for upgrading from earlier
versions of CXF.

3.3.8 fixes over 19 JIRA issues reported by users and the community.



2. Installation Prerequisites 

Before installing Apache CXF, make sure the following products,
with the specified versions, are installed on your system:

    * Java 8 Development Kit
    * Apache Maven 3.x to build the samples


3.  Integrating CXF Into Your Application

If you use Maven to build your application, you need merely add
appropriate dependencies. See the pom.xml files in the samples.

If you don't use Maven, you'll need to add one or more jars to your
classpath. The file lib/WHICH_JARS should help you decide which 
jars you need.

4. Building the Samples

Building the samples included in the binary distribution is easy. Change to
the samples directory and follow the build instructions in the README.txt file 
included with each sample.

5. Reporting Problems

If you have any problems or want to send feedback of any kind, please e-mail the
CXF dev list, dev@cxf.apache.org.  You can also file issues in JIRA at:

http://issues.apache.org/jira/browse/CXF

6. Migration notes:

See the migration guide at:
http://cxf.apache.org/docs/33-migration-guide.html
for caveats when upgrading.

7. Specific issues, features, and improvements fixed in this version

** Bug
    * [CXF-8227] - Failure to comply with JAX-RS spec with ContainerRequestContext and WriterInterceptorContext
    * [CXF-8257] - Logger no longer logs bad requests
    * [CXF-8303] - MP: Context propagation impossible using  AsyncInvocationInterceptorFactory
    * [CXF-8307] - Invalid class generated if resource contains hyphen
    * [CXF-8310] - JMS transport with flag oneSessionPerConnection causes reconnection to not work
    * [CXF-8311] - OAuth 2.0: Refresh token redemption unexpectedly fails with invalid_grant error
    * [CXF-8318] - NullPointerException in PrettyLoggingFilter
    * [CXF-8325] - Schema validation allows invalid SOAP header
    * [CXF-8327] - UsernameTokenInterceptor doesn't set soap:actor
    * [CXF-8329] - NPE with empty query parameters and collections
    * [CXF-8331] - Reverse proxy url is not reflected when use-x-forwarded-headers is true
    * [CXF-8337] - wsdl2java generates exceptions which do not follow naming convention
    * [CXF-8349] - Flux Returns Mixed Response on Errors and Mono Hangs when Empty

** New Feature
    * [CXF-8213] - Add Micrometer metric support for JAX-WS Spring Boot
    * [CXF-8252] - Add Micrometer metric support for JAX-RS (Spring Boot)

** Improvement
    * [CXF-8317] - Make netty transport HttpObjectAggregator.maxContentLength configurable
    * [CXF-8360] - Configurable property for Apache Velocity logs

** Task
    * [CXF-8355] - RxJava3: Observable / Flowable Returns Mixed Response on Errors and Hangs when Empty
    * [CXF-8358] - RxJava2: Observable / Flowable Returns Mixed Response on Errors and Hangs when Empty






































