Apache CXF 3.0.11 Release Notes

1. Overview

The 3.0.x series of Apache CXF is a significant new version of CXF 
that provides several new features and enhancements.  

New features include: 
Full JAX-RS 2.0 support
New streaming based WS-Security implementation
Bean Validation 1.1
Much easier feature configuration options for JAX-WS
New CXF code generator frontend
Enhanced Reliable-Messaging 1.1 support

As part of the 3.0 refactoring, the runtime has been made smaller, 
many API’s have changed or where relocated, much duplicate 
functionality has been removed, etc…  Thus, 3.0 is not completely
compatible with CXF 2.x and some migration efforts may be required.

Users are encourage to review the migration guide at:
http://cxf.apache.org/docs/30-migration-guide.html
for further information and requirements for upgrading from 2.7.x.

3.0.11 fixes over 30 JIRA issues reported by users and the community.



2. Installation Prerequisites 

Before installing Apache CXF, make sure the following products,
with the specified versions, are installed on your system:

    * Java 6 Development Kit
    * Apache Maven 3.x to build the samples


3.  Integrating CXF Into Your Application

If you use Maven to build your application, you need merely add
appropriate dependencies. See the pom.xml files in the samples.

If you don't use Maven, you'll need to add one or more jars to your
classpath. The file lib/WHICH_JARS should help you decide which 
jars you need.

4. Building the Samples

Building the samples included in the binary distribution is easy. Change to
the samples directory and follow the build instructions in the README.txt file 
included with each sample.

5. Reporting Problems

If you have any problems or want to send feedback of any kind, please e-mail the
CXF dev list, dev@cxf.apache.org.  You can also file issues in JIRA at:

http://issues.apache.org/jira/browse/CXF

6. Migration notes:

See the migration guide at:
http://cxf.apache.org/docs/30-migration-guide.html
for caveats when upgrading from CXF 2.7.x to 3.0.0


7. Specific issues, features, and improvements fixed in this version


** Bug
    * [CXF-6981] - Getting "java.io.IOException: stream is closed" for > 64K messages
    * [CXF-6989] - Content Disposition does not handle "=" in filename
    * [CXF-6990] - Swagger tags not sorted if using Swagger2Feature
    * [CXF-6991] - WS-RM - Request context properties are lost when sending subsequent protocol message
    * [CXF-6992] - ParamConverterProvider invoked with wrong types
    * [CXF-7008] - Regression: CXF-5788 - JMS replyToDestination doesn't work
    * [CXF-7017] - @BeanParam not working in subresource
    * [CXF-7021] - The WS-SecurityPolicy TransportBinding does not respect the digest method of the algorithm suite
    * [CXF-7028] - AsyncResponse Suspended annotation can not be inherited
    * [CXF-7029] - HttpAuthenticationFaultHandler cause java.lang.IllegalStateException: WRITER
    * [CXF-7033] - LoggingInterceptors do not handle messages with non-UTF-8 encoding properly
    * [CXF-7037] - @Suspended can be broken on tomcat
    * [CXF-7038] - ensure the JMS Connection get refreshed so that the jms retry can get a useful Connection
    * [CXF-7039] - JAX-RS Security SAML web SSO consumer service can not validate SAML response behind reverse proxy
    * [CXF-7043] - JAX-RS endpoints cannot handle encoded URL when used with continuation and servlet transport
    * [CXF-7044] - LoggingInInterceptor sometimes crashes if truncates response with Unicode simbols
    * [CXF-7059] - ClientImpl.getBooleanValue() will return null for String values
    * [CXF-7070] - HTTP headers logged in debug
    * [CXF-7071] - HttpServletRequest.getParameter only get String from query not both posted form data
    * [CXF-7080] - XmlSecOutInterceptor doesn't recognise KeyName as a KeyIdentifier
    * [CXF-7087] - Getting the wsdl from a cxf webservice with custom XMLOuputFactory throws an exception
    * [CXF-7088] - SignedEncryptedSupportingTokens in WS-Policy and SAML not encrypted being accepted


** Improvement
    * [CXF-7002] - Add isExpired method in JettyContinuationWrapper 
    * [CXF-7006] - add an util method in AuthorizationUtils which can take AuthorizationFailure cause
    * [CXF-7022] - Allow customization of Swagger JSON generation
    * [CXF-7027] - WADLGenerator should support AsyncResponse if ElementClass annotation is used
    * [CXF-7032] - Update WadlToJava to support javax.validation.Valid 
    * [CXF-7035] - Default Swagger2Serializers dynamicBasePath code needs to sync BeanConfig with Swagger
    * [CXF-7075] - Remove unnecessary string.length() and map.containsKey(...) calls to improve performance
    * [CXF-7089] - Let ParamConverters handle null proxy path parameters

























