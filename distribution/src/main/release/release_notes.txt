Apache CXF 3.0.5 Release Notes

1. Overview

The 3.0.x series of Apache CXF is a significant new version of CXF 
that provides several new features and enhancements.  

New features include: 
Full JAX-RS 2.0 support
New streaming based WS-Security implementation
Bean Validation 1.1
Much easier feature configuration options for JAX-WS
New CXF code generator frontend
Enhanced Reliable-Messaging 1.1 support

As part of the 3.0 refactoring, the runtime has been made smaller, 
many API’s have changed or where relocated, much duplicate 
functionality has been removed, etc…  Thus, 3.0 is not completely
compatible with CXF 2.x and some migration efforts may be required.

Users are encourage to review the migration guide at:
http://cxf.apache.org/docs/30-migration-guide.html
for further information and requirements for upgrading from 2.7.x.

3.0.5 fixes over 70 JIRA issues reported by users and the community.



2. Installation Prerequisites 

Before installing Apache CXF, make sure the following products,
with the specified versions, are installed on your system:

    * Java 6 Development Kit
    * Apache Maven 3.x to build the samples


3.  Integrating CXF Into Your Application

If you use Maven to build your application, you need merely add
appropriate dependencies. See the pom.xml files in the samples.

If you don't use Maven, you'll need to add one or more jars to your
classpath. The file lib/WHICH_JARS should help you decide which 
jars you need.

4. Building the Samples

Building the samples included in the binary distribution is easy. Change to
the samples directory and follow the build instructions in the README.txt file 
included with each sample.

5. Reporting Problems

If you have any problems or want to send feedback of any kind, please e-mail the
CXF dev list, dev@cxf.apache.org.  You can also file issues in JIRA at:

http://issues.apache.org/jira/browse/CXF

6. Migration notes:

See the migration guide at:
http://cxf.apache.org/docs/30-migration-guide.html
for caveats when upgrading from CXF 2.7.x to 3.0.0


7. Specific issues, features, and improvements fixed in this version



** Bug
    * [CXF-6007] - WebClient does not resend request in Digest authentication for HTTP methods GET, HEAD, DELETE, OPTIONS (with no body).
    * [CXF-6256] - Unexpected response code
    * [CXF-6257] - Creating and Endpoint using JAX-WS API, getting the binding and then publishing causes a NullPointerException
    * [CXF-6260] - JAXRS Async Client can not handle InvocationCallback TypeVariable
    * [CXF-6272] - SCT Renew in Secure Conversation
    * [CXF-6274] - NullPointerException in DestinationSequence because of RMCaptureInInterceptor not in interceptor chain
    * [CXF-6276] - Some non-primitive properties lost during generating WADL
    * [CXF-6284] - JAX-RS servlet run-time leaks additional strong references
    * [CXF-6285] - NPE in SwaggerFeature.calculateDefaultResourcePackage
    * [CXF-6295] - String cannot be cast to org.apache.ws.security.validate.Validator
    * [CXF-6297] - JAX-RS BeanValidation feature fails with NPE in JAXRSBeanValidationOutInterceptor on sub-resource call
    * [CXF-6300] - cipherSuite configuration does not work with HTTPJ servers
    * [CXF-6302] - JAXRS endpoints with URL encoded addresses can not be located
    * [CXF-6304] - AuthorizationCodeGrantHandler sets the approved scopes as the requested ones
    * [CXF-6306] - AuthorizationCodeGrantService does not record a single pre-registered redirect uri in a session if current request has no redirect uri set
    * [CXF-6309] - Client processing exception has its cause set to the original exception wrapped in Fault
    * [CXF-6313] - SamlHeaderOutInterceptor does not set headers on the message if it had none
    * [CXF-6314] - WebSocket transport should not require dependency to jetty
    * [CXF-6315] - Optional WS-Addressing policy doesn't return required soap headers
    * [CXF-6317] - Authorization not possible with multiple service beans
    * [CXF-6319] - Regression: failing namespace resolution after CXF-5891
    * [CXF-6320] - Zero-length entity should throw 400 on pre-packaged provider
    * [CXF-6321] - Make sure global JAX-RS filters are applied once per request even if made to sub-resource
    * [CXF-6322] - AbstractSearchConditionParser not working with UUID fields
    * [CXF-6327] - Invalid Policy exception for EndorsingSupportingTokens with more than one token assertions
    * [CXF-6331] - Wrap exceptions in JAXRSBeanValidationInvoker into Fault so that these exceptions are exposed to ExceptionMapper-s
    * [CXF-6332] - Wadl Genertion: @Description cannot be bound to field
    * [CXF-6336] - Client ParamConverterProvider may be lost if Client runs in the server scope
    * [CXF-6338] - Reversed logic in AbstractJwtHandler#validateSignature
    * [CXF-6340] - Return value of AsyncResponseImpl.cancel() not follow JAXRS 2.0 javadoc
    * [CXF-6343] - EncryptedHeader not properly processed or generated
    * [CXF-6352] - ContainerResponseContext.getLinks() loses links if they have no 'rel' parameter 
    * [CXF-6356] - NPE when calling ServiceUnavailableException.getRetryTime()
    * [CXF-6357] - request matching on method matching issue with compareSortedConsumesMediaTypes
    * [CXF-6359] - NullPointerException when certAlias specified but no keyManagers are configured
    * [CXF-6361] - HttpCondiut is not detecting the redirect loop properly
    * [CXF-6366] - JAX-RS Client runtime does not encode forward slashes in Matrix parameters
    * [CXF-6367] - JAX-RS Client runtime does not check BeanParam bean fields
    * [CXF-6368] - Unexpected response code
    * [CXF-6369] - org.apache.cxf.jaxrs.impl.ConfigurationImpl does not comply with SPEC
    * [CXF-6370] - wrong usages for System.arraycopy in org.apache.cxf.jaxrs.impl.AsyncResponseImpl
    * [CXF-6371] - WADL Generator does not always correctly deal with generic types 
    * [CXF-6373] - CompletionCallback can not get the Throwable if error occurs in other interceptor (no serviceinvokerInterceptor)
    * [CXF-6374] - If no OPTIONS defined , OPTIONS request will fail with 404
    * [CXF-6375] - Providers.getMessageBodyReader throws NPE
    * [CXF-6377] - Wrong media type of response
    * [CXF-6378] - LinkBuilderImpl does not resolve relative links against baseUri
    * [CXF-6379] - Separate HTTP headers for multiple header values not possible - bug in CXF-3714 fix

** Improvement
    * [CXF-6133] - Introduce Jwe and Jws exception classes to make it easier to provide dedicated JAX-RS exception mappers
    * [CXF-6220] - JWA algorithm representation code needs to be cleaned up
    * [CXF-6232] - Refactor CXF's Atmosphere based WebSocket transport for more flexible and extensible handling
    * [CXF-6255] - WSS4JInInterceptor: "Security header, but it's a fault"
    * [CXF-6268] - Make cxf-codegen-plugin toolchains aware during maven build
    * [CXF-6277] - Enhance the X509TokenValidator to also validate X509Data DOM Elements
    * [CXF-6283] - Support binary attributes in the LDAPClaimsHandler
    * [CXF-6305] - Add an option to include or exclude specific response headers in WebSocket's transport
    * [CXF-6308] - Make WebSocket transport's embedded jetty mode to use atmosphere if available
    * [CXF-6329] - Allow multiple atmosphere interceptors to be configured for the websocket transport
    * [CXF-6333] - Support Inclusive C14N via security policy
    * [CXF-6335] - Explicitly set HTTPConduit on client inbound message
    * [CXF-6337] - Support the redirection directly via the injected JAX-RS ServletContext context
    * [CXF-6341] - Add atmosphere when installing feature cxf-transports-websocket-server
    * [CXF-6342] - Undocumented feature to pass dates as Duration in JAX-RS-search 
    * [CXF-6344] - Support system file location for JexlClaimMapper scripts
    * [CXF-6345] - Support Logging in JexlClaimMapper scripts
    * [CXF-6353] - provide a not typed way to configure cxf jaxrs clients
    * [CXF-6363] - Introduce JwsHeaders

** New Feature
    * [CXF-6264] - Provide Swagger to CXF UserResource converter

** Task
    * [CXF-6278] - Introduce MessageDigestInputStream utility class
    * [CXF-6279] - Introduce X509 Certificate Path validation utility code 
    * [CXF-6280] - Consider providing a DirectAccessToken JAXRS service
